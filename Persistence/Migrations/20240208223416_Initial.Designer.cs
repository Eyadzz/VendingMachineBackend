// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistence.DatabaseConfig;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240208223416_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.User.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles", "Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Buyer"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Seller"
                        });
                });

            modelBuilder.Entity("Domain.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("Balance")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users", "Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 100f,
                            CreatedAt = new DateTime(2024, 2, 8, 22, 34, 16, 355, DateTimeKind.Utc).AddTicks(8883),
                            Password = "$2a$11$Pjl9qxNSCv9rSUp1W5/Tb..q/fHcEAkiG5tWK2sosV8onQ91kyivq",
                            RoleId = 1,
                            Username = "Buyer"
                        },
                        new
                        {
                            Id = 2,
                            Balance = 0f,
                            CreatedAt = new DateTime(2024, 2, 8, 22, 34, 16, 355, DateTimeKind.Utc).AddTicks(8888),
                            Password = "$2a$11$Pjl9qxNSCv9rSUp1W5/Tb..q/fHcEAkiG5tWK2sosV8onQ91kyivq",
                            RoleId = 2,
                            Username = "Seller"
                        });
                });

            modelBuilder.Entity("Domain.VendingMachine.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("SellerId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.ToTable("Products", "VendingMachine");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 8, 22, 34, 16, 355, DateTimeKind.Utc).AddTicks(8903),
                            Name = "Chips",
                            Price = 5f,
                            Quantity = 100,
                            SellerId = 2
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 8, 22, 34, 16, 355, DateTimeKind.Utc).AddTicks(8907),
                            Name = "Coke",
                            Price = 11f,
                            Quantity = 30,
                            SellerId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 8, 22, 34, 16, 355, DateTimeKind.Utc).AddTicks(8908),
                            Name = "Biscuits",
                            Price = 2.5f,
                            Quantity = 56,
                            SellerId = 2
                        });
                });

            modelBuilder.Entity("Domain.User.User", b =>
                {
                    b.HasOne("Domain.User.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Domain.VendingMachine.Product", b =>
                {
                    b.HasOne("Domain.User.User", "Seller")
                        .WithMany("Products")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("Domain.User.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Domain.User.User", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
